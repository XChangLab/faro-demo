{"version":3,"file":"_next/static/chunks/pages/index-0dfb79430f49b8ac.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/next@15.5.2_@babel+core@7.28.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/image.js","webpack://_N_E/","webpack://_N_E/../../../src/shared/lib/image-blur-svg.ts","webpack://_N_E/./node_modules/.pnpm/next@15.5.2_@babel+core@7.28.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/font/google/target.css","webpack://_N_E/../../src/client/image-component.tsx","webpack://_N_E/./src/pages/index.tsx","webpack://_N_E/../../src/client/use-merged-ref.ts","webpack://_N_E/../../../src/shared/lib/get-img-props.ts","webpack://_N_E/./node_modules/.pnpm/next@15.5.2_@babel+core@7.28.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/font/google/target.css?164f","webpack://_N_E/../../../src/shared/lib/image-loader.ts","webpack://_N_E/../../../src/shared/lib/image-external.tsx"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */\nexport function getImageBlurSvg({\n  widthInt,\n  heightInt,\n  blurWidth,\n  blurHeight,\n  blurDataURL,\n  objectFit,\n}: {\n  widthInt?: number\n  heightInt?: number\n  blurWidth?: number\n  blurHeight?: number\n  blurDataURL: string\n  objectFit?: string\n}): string {\n  const std = 20\n  const svgWidth = blurWidth ? blurWidth * 40 : widthInt\n  const svgHeight = blurHeight ? blurHeight * 40 : heightInt\n\n  const viewBox =\n    svgWidth && svgHeight ? `viewBox='0 0 ${svgWidth} ${svgHeight}'` : ''\n  const preserveAspectRatio = viewBox\n    ? 'none'\n    : objectFit === 'contain'\n      ? 'xMidYMid'\n      : objectFit === 'cover'\n        ? 'xMidYMid slice'\n        : 'none'\n\n  return `%3Csvg xmlns='http://www.w3.org/2000/svg' ${viewBox}%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='${preserveAspectRatio}' style='filter: url(%23b);' href='${blurDataURL}'/%3E%3C/svg%3E`\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Geist', 'Geist Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_b54b6a\",\"variable\":\"__variable_b54b6a\"};","'use client'\n\nimport React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  forwardRef,\n  use,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport Head from '../shared/lib/head'\nimport { getImgProps } from '../shared/lib/get-img-props'\nimport type {\n  ImageProps,\n  ImgProps,\n  OnLoad,\n  OnLoadingComplete,\n  PlaceholderValue,\n} from '../shared/lib/get-img-props'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n} from '../shared/lib/image-config'\nimport { imageConfigDefault } from '../shared/lib/image-config'\nimport { ImageConfigContext } from '../shared/lib/image-config-context.shared-runtime'\nimport { warnOnce } from '../shared/lib/utils/warn-once'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\nimport { useMergedRef } from './use-merged-ref'\n\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete\n\nif (typeof window === 'undefined') {\n  ;(globalThis as any).__NEXT_IMAGE_IMPORTED = true\n}\n\nexport type { ImageLoaderProps }\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\ntype ImgElementWithDataProp = HTMLImageElement & {\n  'data-loaded-src': string | undefined\n}\n\ntype ImageElementProps = ImgProps & {\n  unoptimized: boolean\n  placeholder: PlaceholderValue\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>\n  setBlurComplete: (b: boolean) => void\n  setShowAltText: (b: boolean) => void\n  sizesInput: string | undefined\n}\n\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(\n  img: ImgElementWithDataProp,\n  placeholder: PlaceholderValue,\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>,\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>,\n  setBlurComplete: (b: boolean) => void,\n  unoptimized: boolean,\n  sizesInput: string | undefined\n) {\n  const src = img?.src\n  if (!img || img['data-loaded-src'] === src) {\n    return\n  }\n  img['data-loaded-src'] = src\n  const p = 'decode' in img ? img.decode() : Promise.resolve()\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return\n    }\n    if (placeholder !== 'empty') {\n      setBlurComplete(true)\n    }\n    if (onLoadRef?.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load')\n      Object.defineProperty(event, 'target', { writable: false, value: img })\n      let prevented = false\n      let stopped = false\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true\n          event.preventDefault()\n        },\n        stopPropagation: () => {\n          stopped = true\n          event.stopPropagation()\n        },\n      })\n    }\n    if (onLoadingCompleteRef?.current) {\n      onLoadingCompleteRef.current(img)\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const origSrc = new URL(src, 'http://n').searchParams.get('url') || src\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {\n          let widthViewportRatio =\n            img.getBoundingClientRect().width / window.innerWidth\n          if (widthViewportRatio < 0.6) {\n            if (sizesInput === '100vw') {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            } else {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            }\n          }\n        }\n        if (img.parentElement) {\n          const { position } = window.getComputedStyle(img.parentElement)\n          const valid = ['absolute', 'fixed', 'relative']\n          if (!valid.includes(position)) {\n            warnOnce(\n              `Image with src \"${origSrc}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid\n                .map(String)\n                .join(',')}.`\n            )\n          }\n        }\n        if (img.height === 0) {\n          warnOnce(\n            `Image with src \"${origSrc}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`\n          )\n        }\n      }\n\n      const heightModified =\n        img.height.toString() !== img.getAttribute('height')\n      const widthModified = img.width.toString() !== img.getAttribute('width')\n      if (\n        (heightModified && !widthModified) ||\n        (!heightModified && widthModified)\n      ) {\n        warnOnce(\n          `Image with src \"${origSrc}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`\n        )\n      }\n    }\n  })\n}\n\nfunction getDynamicProps(\n  fetchPriority?: string\n): Record<string, string | undefined> {\n  if (Boolean(use)) {\n    // In React 19.0.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return { fetchPriority }\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return { fetchpriority: fetchPriority }\n}\n\nconst ImageElement = forwardRef<HTMLImageElement | null, ImageElementProps>(\n  (\n    {\n      src,\n      srcSet,\n      sizes,\n      height,\n      width,\n      decoding,\n      className,\n      style,\n      fetchPriority,\n      placeholder,\n      loading,\n      unoptimized,\n      fill,\n      onLoadRef,\n      onLoadingCompleteRef,\n      setBlurComplete,\n      setShowAltText,\n      sizesInput,\n      onLoad,\n      onError,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const ownRef = useCallback(\n      (img: ImgElementWithDataProp | null) => {\n        if (!img) {\n          return\n        }\n        if (onError) {\n          // If the image has an error before react hydrates, then the error is lost.\n          // The workaround is to wait until the image is mounted which is after hydration,\n          // then we set the src again to trigger the error handler (if there was an error).\n          // eslint-disable-next-line no-self-assign\n          img.src = img.src\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (!src) {\n            console.error(`Image is missing required \"src\" property:`, img)\n          }\n          if (img.getAttribute('alt') === null) {\n            console.error(\n              `Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`\n            )\n          }\n        }\n        if (img.complete) {\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }\n      },\n      [\n        src,\n        placeholder,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        onError,\n        unoptimized,\n        sizesInput,\n      ]\n    )\n\n    const ref = useMergedRef(forwardedRef, ownRef)\n\n    return (\n      <img\n        {...rest}\n        {...getDynamicProps(fetchPriority)}\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading={loading}\n        width={width}\n        height={height}\n        decoding={decoding}\n        data-nimg={fill ? 'fill' : '1'}\n        className={className}\n        style={style}\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes={sizes}\n        srcSet={srcSet}\n        src={src}\n        ref={ref}\n        onLoad={(event) => {\n          const img = event.currentTarget as ImgElementWithDataProp\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }}\n        onError={(event) => {\n          // if the real image fails to load, this will ensure \"alt\" is visible\n          setShowAltText(true)\n          if (placeholder !== 'empty') {\n            // If the real image fails to load, this will still remove the placeholder.\n            setBlurComplete(true)\n          }\n          if (onError) {\n            onError(event)\n          }\n        }}\n      />\n    )\n  }\n)\n\nfunction ImagePreload({\n  isAppRouter,\n  imgAttributes,\n}: {\n  isAppRouter: boolean\n  imgAttributes: ImgProps\n}) {\n  const opts: ReactDOM.PreloadOptions = {\n    as: 'image',\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: imgAttributes.crossOrigin,\n    referrerPolicy: imgAttributes.referrerPolicy,\n    ...getDynamicProps(imgAttributes.fetchPriority),\n  }\n\n  if (isAppRouter && ReactDOM.preload) {\n    ReactDOM.preload(imgAttributes.src, opts)\n    return null\n  }\n\n  return (\n    <Head>\n      <link\n        key={\n          '__nimg-' +\n          imgAttributes.src +\n          imgAttributes.srcSet +\n          imgAttributes.sizes\n        }\n        rel=\"preload\"\n        // Note how we omit the `href` attribute, as it would only be relevant\n        // for browsers that do not support `imagesrcset`, and in those cases\n        // it would cause the incorrect image to be preloaded.\n        //\n        // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n        href={imgAttributes.srcSet ? undefined : imgAttributes.src}\n        {...opts}\n      />\n    </Head>\n  )\n}\n\n/**\n * The `Image` component is used to optimize images.\n *\n * Read more: [Next.js docs: `Image`](https://nextjs.org/docs/app/api-reference/components/image)\n */\nexport const Image = forwardRef<HTMLImageElement | null, ImageProps>(\n  (props, forwardedRef) => {\n    const pagesRouter = useContext(RouterContext)\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter\n\n    const configContext = useContext(ImageConfigContext)\n    const config = useMemo(() => {\n      const c = configEnv || configContext || imageConfigDefault\n      const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n      const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n      const qualities = c.qualities?.sort((a, b) => a - b)\n      return { ...c, allSizes, deviceSizes, qualities }\n    }, [configContext])\n\n    const { onLoad, onLoadingComplete } = props\n    const onLoadRef = useRef(onLoad)\n\n    useEffect(() => {\n      onLoadRef.current = onLoad\n    }, [onLoad])\n\n    const onLoadingCompleteRef = useRef(onLoadingComplete)\n\n    useEffect(() => {\n      onLoadingCompleteRef.current = onLoadingComplete\n    }, [onLoadingComplete])\n\n    const [blurComplete, setBlurComplete] = useState(false)\n    const [showAltText, setShowAltText] = useState(false)\n\n    const { props: imgAttributes, meta: imgMeta } = getImgProps(props, {\n      defaultLoader,\n      imgConf: config,\n      blurComplete,\n      showAltText,\n    })\n\n    return (\n      <>\n        {\n          <ImageElement\n            {...imgAttributes}\n            unoptimized={imgMeta.unoptimized}\n            placeholder={imgMeta.placeholder}\n            fill={imgMeta.fill}\n            onLoadRef={onLoadRef}\n            onLoadingCompleteRef={onLoadingCompleteRef}\n            setBlurComplete={setBlurComplete}\n            setShowAltText={setShowAltText}\n            sizesInput={props.sizes}\n            ref={forwardedRef}\n          />\n        }\n        {imgMeta.priority ? (\n          <ImagePreload\n            isAppRouter={isAppRouter}\n            imgAttributes={imgAttributes}\n          />\n        ) : null}\n      </>\n    )\n  }\n)\n","import Image from \"next/image\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport default function Home() {\n  return (\n    <div\n      className={`${geistSans.className} ${geistMono.className} font-sans grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20`}\n    >\n      <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start\">\n        <Image\n          className=\"dark:invert\"\n          src=\"/next.svg\"\n          alt=\"Next.js logo\"\n          width={180}\n          height={38}\n          priority\n        />\n        <ol className=\"font-mono list-inside list-decimal text-sm/6 text-center sm:text-left\">\n          <li className=\"mb-2 tracking-[-.01em]\">\n            Get started by editing{\" \"}\n            <code className=\"bg-black/[.05] dark:bg-white/[.06] font-mono font-semibold px-1 py-0.5 rounded\">\n              src/pages/index.tsx\n            </code>\n            .\n          </li>\n          <li className=\"tracking-[-.01em]\">\n            Save and see your changes instantly.\n          </li>\n        </ol>\n        <div className=\"flex gap-4 items-center flex-col sm:flex-row\">\n          <a\n            className=\"rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto\"\n            href=\"https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Image\n              className=\"dark:invert\"\n              src=\"/vercel.svg\"\n              alt=\"Vercel logomark\"\n              width={20}\n              height={20}\n            />\n            Deploy now\n          </a>\n          <a\n            className=\"rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]\"\n            href=\"https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Read our docs\n          </a>\n        </div>\n      </main>\n      <footer className=\"row-start-3 flex gap-[24px] flex-wrap items-center justify-center\">\n        <a\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4\"\n          href=\"https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image\n            aria-hidden\n            src=\"/file.svg\"\n            alt=\"File icon\"\n            width={16}\n            height={16}\n          />\n          Learn\n        </a>\n        <a\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4\"\n          href=\"https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image\n            aria-hidden\n            src=\"/window.svg\"\n            alt=\"Window icon\"\n            width={16}\n            height={16}\n          />\n          Examples\n        </a>\n        <a\n          className=\"flex items-center gap-2 hover:underline hover:underline-offset-4\"\n          href=\"https://nextjs.org?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image\n            aria-hidden\n            src=\"/globe.svg\"\n            alt=\"Globe icon\"\n            width={16}\n            height={16}\n          />\n          Go to nextjs.org →\n        </a>\n        <button onClick={() => { throw new Error('Test error') }}>Trigger an error</button>\n      </footer>\n    </div>\n  );\n}\n","import { useCallback, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<(() => void) | null>(null)\n  const cleanupB = useRef<(() => void) | null>(null)\n\n  // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n  // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n  // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n  // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n  // (because it hasn't been updated for React 19)\n  // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n  // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n  return useCallback(\n    (current: TElement | null): void => {\n      if (current === null) {\n        const cleanupFnA = cleanupA.current\n        if (cleanupFnA) {\n          cleanupA.current = null\n          cleanupFnA()\n        }\n        const cleanupFnB = cleanupB.current\n        if (cleanupFnB) {\n          cleanupB.current = null\n          cleanupFnB()\n        }\n      } else {\n        if (refA) {\n          cleanupA.current = applyRef(refA, current)\n        }\n        if (refB) {\n          cleanupB.current = applyRef(refB, current)\n        }\n      }\n    },\n    [refA, refB]\n  )\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","import { warnOnce } from './utils/warn-once'\nimport { getImageBlurSvg } from './image-blur-svg'\nimport { imageConfigDefault } from './image-config'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n  ImageLoaderPropsWithConfig,\n} from './image-config'\n\nimport type { CSSProperties, JSX } from 'react'\n\nexport interface StaticImageData {\n  src: string\n  height: number\n  width: number\n  blurDataURL?: string\n  blurWidth?: number\n  blurHeight?: number\n}\n\nexport interface StaticRequire {\n  default: StaticImageData\n}\n\nexport type StaticImport = StaticRequire | StaticImageData\n\nexport type ImageProps = Omit<\n  JSX.IntrinsicElements['img'],\n  'src' | 'srcSet' | 'ref' | 'alt' | 'width' | 'height' | 'loading'\n> & {\n  src: string | StaticImport\n  alt: string\n  width?: number | `${number}`\n  height?: number | `${number}`\n  fill?: boolean\n  loader?: ImageLoader\n  quality?: number | `${number}`\n  priority?: boolean\n  loading?: LoadingValue\n  placeholder?: PlaceholderValue\n  blurDataURL?: string\n  unoptimized?: boolean\n  overrideSrc?: string\n  /**\n   * @deprecated Use `onLoad` instead.\n   * @see https://nextjs.org/docs/app/api-reference/components/image#onload\n   */\n  onLoadingComplete?: OnLoadingComplete\n  /**\n   * @deprecated Use `fill` prop instead of `layout=\"fill\"` or change import to `next/legacy/image`.\n   * @see https://nextjs.org/docs/api-reference/next/legacy/image\n   */\n  layout?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectFit?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectPosition?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyBoundary?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyRoot?: string\n}\n\nexport type ImgProps = Omit<ImageProps, 'src' | 'loader'> & {\n  loading: LoadingValue\n  width: number | undefined\n  height: number | undefined\n  style: NonNullable<JSX.IntrinsicElements['img']['style']>\n  sizes: string | undefined\n  srcSet: string | undefined\n  src: string\n}\n\nconst VALID_LOADING_VALUES = ['lazy', 'eager', undefined] as const\n\n// Object-fit values that are not valid background-size values\nconst INVALID_BACKGROUND_SIZE_VALUES = [\n  '-moz-initial',\n  'fill',\n  'none',\n  'scale-down',\n  undefined,\n]\ntype LoadingValue = (typeof VALID_LOADING_VALUES)[number]\ntype ImageConfig = ImageConfigComplete & {\n  allSizes: number[]\n  output?: 'standalone' | 'export'\n}\n\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\n// Do not export - this is an internal type only\n// because `next.config.js` is only meant for the\n// built-in loaders, not for a custom loader() prop.\ntype ImageLoaderWithConfig = (p: ImageLoaderPropsWithConfig) => string\n\nexport type PlaceholderValue = 'blur' | 'empty' | `data:image/${string}`\nexport type OnLoad = React.ReactEventHandler<HTMLImageElement> | undefined\nexport type OnLoadingComplete = (img: HTMLImageElement) => void\n\nexport type PlaceholderStyle = Partial<\n  Pick<\n    CSSProperties,\n    | 'backgroundSize'\n    | 'backgroundPosition'\n    | 'backgroundRepeat'\n    | 'backgroundImage'\n  >\n>\n\nfunction isStaticRequire(\n  src: StaticRequire | StaticImageData\n): src is StaticRequire {\n  return (src as StaticRequire).default !== undefined\n}\n\nfunction isStaticImageData(\n  src: StaticRequire | StaticImageData\n): src is StaticImageData {\n  return (src as StaticImageData).src !== undefined\n}\n\nfunction isStaticImport(src: string | StaticImport): src is StaticImport {\n  return (\n    !!src &&\n    typeof src === 'object' &&\n    (isStaticRequire(src as StaticImport) ||\n      isStaticImageData(src as StaticImport))\n  )\n}\n\nconst allImgs = new Map<\n  string,\n  { src: string; priority: boolean; placeholder: PlaceholderValue }\n>()\nlet perfObserver: PerformanceObserver | undefined\n\nfunction getInt(x: unknown): number | undefined {\n  if (typeof x === 'undefined') {\n    return x\n  }\n  if (typeof x === 'number') {\n    return Number.isFinite(x) ? x : NaN\n  }\n  if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10)\n  }\n  return NaN\n}\n\nfunction getWidths(\n  { deviceSizes, allSizes }: ImageConfig,\n  width: number | undefined,\n  sizes: string | undefined\n): { widths: number[]; kind: 'w' | 'x' } {\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g\n    const percentSizes = []\n    for (let match; (match = viewportWidthRe.exec(sizes)); match) {\n      percentSizes.push(parseInt(match[2]))\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01\n      return {\n        widths: allSizes.filter((s) => s >= deviceSizes[0] * smallestRatio),\n        kind: 'w',\n      }\n    }\n    return { widths: allSizes, kind: 'w' }\n  }\n  if (typeof width !== 'number') {\n    return { widths: deviceSizes, kind: 'w' }\n  }\n\n  const widths = [\n    ...new Set(\n      // > This means that most OLED screens that say they are 3x resolution,\n      // > are actually 3x in the green color, but only 1.5x in the red and\n      // > blue colors. Showing a 3x resolution image in the app vs a 2x\n      // > resolution image will be visually the same, though the 3x image\n      // > takes significantly more data. Even true 3x resolution screens are\n      // > wasteful as the human eye cannot see that level of detail without\n      // > something like a magnifying glass.\n      // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n      [width, width * 2 /*, width * 3*/].map(\n        (w) => allSizes.find((p) => p >= w) || allSizes[allSizes.length - 1]\n      )\n    ),\n  ]\n  return { widths, kind: 'x' }\n}\n\ntype GenImgAttrsData = {\n  config: ImageConfig\n  src: string\n  unoptimized: boolean\n  loader: ImageLoaderWithConfig\n  width?: number\n  quality?: number\n  sizes?: string\n}\n\ntype GenImgAttrsResult = {\n  src: string\n  srcSet: string | undefined\n  sizes: string | undefined\n}\n\nfunction generateImgAttrs({\n  config,\n  src,\n  unoptimized,\n  width,\n  quality,\n  sizes,\n  loader,\n}: GenImgAttrsData): GenImgAttrsResult {\n  if (unoptimized) {\n    return { src, srcSet: undefined, sizes: undefined }\n  }\n\n  const { widths, kind } = getWidths(config, width, sizes)\n  const last = widths.length - 1\n\n  return {\n    sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n    srcSet: widths\n      .map(\n        (w, i) =>\n          `${loader({ config, src, quality, width: w })} ${\n            kind === 'w' ? w : i + 1\n          }${kind}`\n      )\n      .join(', '),\n\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({ config, src, quality, width: widths[last] }),\n  }\n}\n\n/**\n * A shared function, used on both client and server, to generate the props for <img>.\n */\nexport function getImgProps(\n  {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill = false,\n    style,\n    overrideSrc,\n    onLoad,\n    onLoadingComplete,\n    placeholder = 'empty',\n    blurDataURL,\n    fetchPriority,\n    decoding = 'async',\n    layout,\n    objectFit,\n    objectPosition,\n    lazyBoundary,\n    lazyRoot,\n    ...rest\n  }: ImageProps,\n  _state: {\n    defaultLoader: ImageLoaderWithConfig\n    imgConf: ImageConfigComplete\n    showAltText?: boolean\n    blurComplete?: boolean\n  }\n): {\n  props: ImgProps\n  meta: {\n    unoptimized: boolean\n    priority: boolean\n    placeholder: NonNullable<ImageProps['placeholder']>\n    fill: boolean\n  }\n} {\n  const { imgConf, showAltText, blurComplete, defaultLoader } = _state\n  let config: ImageConfig\n  let c = imgConf || imageConfigDefault\n  if ('allSizes' in c) {\n    config = c as ImageConfig\n  } else {\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n    const qualities = c.qualities?.sort((a, b) => a - b)\n    config = { ...c, allSizes, deviceSizes, qualities }\n  }\n\n  if (typeof defaultLoader === 'undefined') {\n    throw new Error(\n      'images.loaderFile detected but the file is missing default export.\\nRead more: https://nextjs.org/docs/messages/invalid-images-config'\n    )\n  }\n  let loader: ImageLoaderWithConfig = rest.loader || defaultLoader\n\n  // Remove property so it's not spread on <img> element\n  delete rest.loader\n  delete (rest as any).srcSet\n\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = '__next_img_default' in loader\n\n  if (isDefaultLoader) {\n    if (config.loader === 'custom') {\n      throw new Error(\n        `Image with src \"${src}\" is missing \"loader\" prop.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`\n      )\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader as ImageLoader\n    loader = (obj) => {\n      const { config: _, ...opts } = obj\n      return customImageLoader(opts)\n    }\n  }\n\n  if (layout) {\n    if (layout === 'fill') {\n      fill = true\n    }\n    const layoutToStyle: Record<string, Record<string, string> | undefined> = {\n      intrinsic: { maxWidth: '100%', height: 'auto' },\n      responsive: { width: '100%', height: 'auto' },\n    }\n    const layoutToSizes: Record<string, string | undefined> = {\n      responsive: '100vw',\n      fill: '100vw',\n    }\n    const layoutStyle = layoutToStyle[layout]\n    if (layoutStyle) {\n      style = { ...style, ...layoutStyle }\n    }\n    const layoutSizes = layoutToSizes[layout]\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes\n    }\n  }\n\n  let staticSrc = ''\n  let widthInt = getInt(width)\n  let heightInt = getInt(height)\n  let blurWidth: number | undefined\n  let blurHeight: number | undefined\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src\n\n    if (!staticImageData.src) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n\n    blurWidth = staticImageData.blurWidth\n    blurHeight = staticImageData.blurHeight\n    blurDataURL = blurDataURL || staticImageData.blurDataURL\n    staticSrc = staticImageData.src\n\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width\n        heightInt = staticImageData.height\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width\n        heightInt = Math.round(staticImageData.height * ratio)\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height\n        widthInt = Math.round(staticImageData.width * ratio)\n      }\n    }\n  }\n  src = typeof src === 'string' ? src : staticSrc\n\n  let isLazy =\n    !priority && (loading === 'lazy' || typeof loading === 'undefined')\n  if (!src || src.startsWith('data:') || src.startsWith('blob:')) {\n    // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true\n    isLazy = false\n  }\n  if (config.unoptimized) {\n    unoptimized = true\n  }\n  if (\n    isDefaultLoader &&\n    !config.dangerouslyAllowSVG &&\n    src.split('?', 1)[0].endsWith('.svg')\n  ) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true\n  }\n\n  const qualityInt = getInt(quality)\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (config.output === 'export' && isDefaultLoader && !unoptimized) {\n      throw new Error(\n        `Image Optimization using the default loader is not compatible with \\`{ output: 'export' }\\`.\n  Possible solutions:\n    - Remove \\`{ output: 'export' }\\` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure \\`{ images: { unoptimized: true } }\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (height) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (style?.position && style.position !== 'absolute') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`\n          )\n        }\n        if (style?.width && style.width !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`\n          )\n        }\n        if (style?.height && style.height !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`\n          )\n        }\n      } else {\n        if (typeof widthInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"width\" property.`\n          )\n        } else if (isNaN(widthInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`\n          )\n        }\n        if (typeof heightInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"height\" property.`\n          )\n        } else if (isNaN(heightInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/^[\\x00-\\x20]/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot start with a space or control character. Use src.trimStart() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x20]$/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot end with a space or control character. Use src.trimEnd() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(\n          String\n        ).join(',')}.`\n      )\n    }\n    if (priority && loading === 'lazy') {\n      throw new Error(\n        `Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`\n      )\n    }\n    if (\n      placeholder !== 'empty' &&\n      placeholder !== 'blur' &&\n      !placeholder.startsWith('data:image/')\n    ) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"placeholder\" property \"${placeholder}\".`\n      )\n    }\n    if (placeholder !== 'empty') {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        warnOnce(\n          `Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.`\n        )\n      }\n    }\n    if (qualityInt && qualityInt !== 75 && !config.qualities) {\n      warnOnce(\n        `Image with src \"${src}\" is using quality \"${qualityInt}\" which is not configured in images.qualities. This config will be required starting in Next.js 16.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n    if (\n      src.startsWith('/') &&\n      src.includes('?') &&\n      (!config?.localPatterns?.length ||\n        (config.localPatterns.length === 1 &&\n          config.localPatterns[0].pathname === '/_next/static/media/**'))\n    ) {\n      warnOnce(\n        `Image with src \"${src}\" is using a query string which is not configured in images.localPatterns. This config will be required starting in Next.js 16.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n      )\n    }\n    if (placeholder === 'blur' && !blurDataURL) {\n      const VALID_BLUR_EXT = ['jpeg', 'png', 'webp', 'avif'] // should match next-image-loader\n\n      throw new Error(\n        `Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n        Possible solutions:\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n          - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\n            ','\n          )} (animated images not supported)\n          - Remove the \"placeholder\" property, effectively no blur effect\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`\n      )\n    }\n    if ('ref' in rest) {\n      warnOnce(\n        `Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.`\n      )\n    }\n\n    if (!unoptimized && !isDefaultLoader) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75,\n      })\n      let url: URL | undefined\n      try {\n        url = new URL(urlStr)\n      } catch (err) {}\n      if (urlStr === src || (url && url.pathname === src && !url.search)) {\n        warnOnce(\n          `Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`\n        )\n      }\n    }\n\n    if (onLoadingComplete) {\n      warnOnce(\n        `Image with src \"${src}\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.`\n      )\n    }\n\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot,\n    })) {\n      if (legacyValue) {\n        warnOnce(\n          `Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`\n        )\n      }\n    }\n\n    if (\n      typeof window !== 'undefined' &&\n      !perfObserver &&\n      window.PerformanceObserver\n    ) {\n      perfObserver = new PerformanceObserver((entryList) => {\n        for (const entry of entryList.getEntries()) {\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = entry?.element?.src || ''\n          const lcpImage = allImgs.get(imgSrc)\n          if (\n            lcpImage &&\n            !lcpImage.priority &&\n            lcpImage.placeholder === 'empty' &&\n            !lcpImage.src.startsWith('data:') &&\n            !lcpImage.src.startsWith('blob:')\n          ) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            warnOnce(\n              `Image with src \"${lcpImage.src}\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.` +\n                `\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority`\n            )\n          }\n        }\n      })\n      try {\n        perfObserver.observe({\n          type: 'largest-contentful-paint',\n          buffered: true,\n        })\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err)\n      }\n    }\n  }\n  const imgStyle = Object.assign(\n    fill\n      ? {\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          objectFit,\n          objectPosition,\n        }\n      : {},\n    showAltText ? {} : { color: 'transparent' },\n    style\n  )\n\n  const backgroundImage =\n    !blurComplete && placeholder !== 'empty'\n      ? placeholder === 'blur'\n        ? `url(\"data:image/svg+xml;charset=utf-8,${getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL: blurDataURL || '', // assume not undefined\n            objectFit: imgStyle.objectFit,\n          })}\")`\n        : `url(\"${placeholder}\")` // assume `data:image/`\n      : null\n\n  const backgroundSize = !INVALID_BACKGROUND_SIZE_VALUES.includes(\n    imgStyle.objectFit\n  )\n    ? imgStyle.objectFit\n    : imgStyle.objectFit === 'fill'\n      ? '100% 100%' // the background-size equivalent of `fill`\n      : 'cover'\n\n  let placeholderStyle: PlaceholderStyle = backgroundImage\n    ? {\n        backgroundSize,\n        backgroundPosition: imgStyle.objectPosition || '50% 50%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage,\n      }\n    : {}\n\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      placeholderStyle.backgroundImage &&\n      placeholder === 'blur' &&\n      blurDataURL?.startsWith('/')\n    ) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      placeholderStyle.backgroundImage = `url(\"${blurDataURL}\")`\n    }\n  }\n\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader,\n  })\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      let fullUrl: URL\n      try {\n        fullUrl = new URL(imgAttributes.src)\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href)\n      }\n      allImgs.set(fullUrl.href, { src, priority, placeholder })\n    }\n  }\n\n  const props: ImgProps = {\n    ...rest,\n    loading: isLazy ? 'lazy' : loading,\n    fetchPriority,\n    width: widthInt,\n    height: heightInt,\n    decoding,\n    className,\n    style: { ...imgStyle, ...placeholderStyle },\n    sizes: imgAttributes.sizes,\n    srcSet: imgAttributes.srcSet,\n    src: overrideSrc || imgAttributes.src,\n  }\n  const meta = { unoptimized, priority, placeholder, fill }\n  return { props, meta }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Geist Mono', 'Geist Mono Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_640145\",\"variable\":\"__variable_640145\"};","import type { ImageLoaderPropsWithConfig } from './image-config'\n\nconst DEFAULT_Q = 75\n\nfunction defaultLoader({\n  config,\n  src,\n  width,\n  quality,\n}: ImageLoaderPropsWithConfig): string {\n  if (process.env.NODE_ENV !== 'production') {\n    const missingValues = []\n\n    // these should always be provided but make sure they are\n    if (!src) missingValues.push('src')\n    if (!width) missingValues.push('width')\n\n    if (missingValues.length > 0) {\n      throw new Error(\n        `Next Image Optimization requires ${missingValues.join(\n          ', '\n        )} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify(\n          { src, width, quality }\n        )}`\n      )\n    }\n\n    if (src.startsWith('//')) {\n      throw new Error(\n        `Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`\n      )\n    }\n\n    if (src.startsWith('/') && config.localPatterns) {\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasLocalMatch } =\n          require('./match-local-pattern') as typeof import('./match-local-pattern')\n        if (!hasLocalMatch(config.localPatterns, src)) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\` does not match \\`images.localPatterns\\` configured in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n          )\n        }\n      }\n    }\n\n    if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n      let parsedSrc: URL\n      try {\n        parsedSrc = new URL(src)\n      } catch (err) {\n        console.error(err)\n        throw new Error(\n          `Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`\n        )\n      }\n\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasRemoteMatch } =\n          require('./match-remote-pattern') as typeof import('./match-remote-pattern')\n        if (\n          !hasRemoteMatch(config.domains!, config.remotePatterns!, parsedSrc)\n        ) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`\n          )\n        }\n      }\n    }\n\n    if (quality && config.qualities && !config.qualities.includes(quality)) {\n      throw new Error(\n        `Invalid quality prop (${quality}) on \\`next/image\\` does not match \\`images.qualities\\` configured in your \\`next.config.js\\`\\n` +\n          `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n  }\n\n  const q =\n    quality ||\n    config.qualities?.reduce((prev, cur) =>\n      Math.abs(cur - DEFAULT_Q) < Math.abs(prev - DEFAULT_Q) ? cur : prev\n    ) ||\n    DEFAULT_Q\n\n  return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${q}${\n    src.startsWith('/_next/static/media/') && process.env.NEXT_DEPLOYMENT_ID\n      ? `&dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n      : ''\n  }`\n}\n\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true\n\nexport default defaultLoader\n","import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageBlurSvg","widthInt","heightInt","blurWidth","blurHeight","blurDataURL","objectFit","svgWidth","svgHeight","viewBox","std","preserveAspectRatio","Image","configEnv","process","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","unoptimized","sizesInput","src","p","decode","Promise","resolve","catch","then","parentElement","isConnected","current","event","Event","Object","defineProperty","writable","value","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","getDynamicProps","fetchPriority","use","Boolean","fetchpriority","ImageElement","forwardRef","forwardedRef","srcSet","sizes","height","width","decoding","className","style","loading","fill","setShowAltText","onLoad","onError","rest","ownRef","useCallback","complete","ref","useMergedRef","data-nimg","ImagePreload","isAppRouter","imgAttributes","opts","as","imageSrcSet","imageSizes","crossOrigin","referrerPolicy","ReactDOM","preload","Head","link","rel","href","undefined","props","pagesRouter","useContext","RouterContext","configContext","ImageConfigContext","config","useMemo","c","imageConfigDefault","allSizes","deviceSizes","sort","a","b","qualities","onLoadingComplete","useRef","useEffect","blurComplete","useState","showAltText","meta","imgMeta","getImgProps","defaultLoader","imgConf","priority","Home","div","geistMono","geistSans","main","alt","ol","li","code","footer","aria-hidden","button","onClick","refA","refB","cleanupA","cleanupB","cleanupFnA","cleanupFnB","applyRef","cleanup","INVALID_BACKGROUND_SIZE_VALUES","isStaticRequire","default","getInt","x","Number","isFinite","NaN","test","parseInt","_state","quality","overrideSrc","layout","objectPosition","lazyBoundary","lazyRoot","loader","isDefaultLoader","customImageLoader","_","obj","layoutStyle","intrinsic","maxWidth","responsive","layoutSizes","staticSrc","isStaticImageData","staticImageData","JSON","stringify","ratio","Math","round","isLazy","startsWith","dangerouslyAllowSVG","split","endsWith","qualityInt","imgStyle","assign","position","left","top","right","bottom","color","backgroundImage","includes","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","generateImgAttrs","widths","kind","getWidths","viewportWidthRe","percentSizes","match","exec","push","length","smallestRatio","min","filter","s","Set","map","find","w","last","i","join","q","reduce","prev","cur","abs","DEFAULT_Q","path","encodeURIComponent","__next_img_default","getImageProps","imgProps","key","entries"],"sourceRoot":"","ignoreList":[0,3,8]}